// Code generated by "enumer -type=CompanyType -transform=title"; DO NOT EDIT.

package companies

import (
	"fmt"
	"strings"
)

const _CompanyTypeName = "CorporationNonProfitCooperativeSoleProprietorship"

var _CompanyTypeIndex = [...]uint8{0, 11, 20, 31, 49}

const _CompanyTypeLowerName = "corporationnonprofitcooperativesoleproprietorship"

func (i CompanyType) String() string {
	if i < 0 || i >= CompanyType(len(_CompanyTypeIndex)-1) {
		return fmt.Sprintf("CompanyType(%d)", i)
	}
	return _CompanyTypeName[_CompanyTypeIndex[i]:_CompanyTypeIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _CompanyTypeNoOp() {
	var x [1]struct{}
	_ = x[Corporation-(0)]
	_ = x[NonProfit-(1)]
	_ = x[Cooperative-(2)]
	_ = x[SoleProprietorship-(3)]
}

var _CompanyTypeValues = []CompanyType{Corporation, NonProfit, Cooperative, SoleProprietorship}

var _CompanyTypeNameToValueMap = map[string]CompanyType{
	_CompanyTypeName[0:11]:       Corporation,
	_CompanyTypeLowerName[0:11]:  Corporation,
	_CompanyTypeName[11:20]:      NonProfit,
	_CompanyTypeLowerName[11:20]: NonProfit,
	_CompanyTypeName[20:31]:      Cooperative,
	_CompanyTypeLowerName[20:31]: Cooperative,
	_CompanyTypeName[31:49]:      SoleProprietorship,
	_CompanyTypeLowerName[31:49]: SoleProprietorship,
}

var _CompanyTypeNames = []string{
	_CompanyTypeName[0:11],
	_CompanyTypeName[11:20],
	_CompanyTypeName[20:31],
	_CompanyTypeName[31:49],
}

// CompanyTypeString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func CompanyTypeString(s string) (CompanyType, error) {
	if val, ok := _CompanyTypeNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _CompanyTypeNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to CompanyType values", s)
}

// CompanyTypeValues returns all values of the enum
func CompanyTypeValues() []CompanyType {
	return _CompanyTypeValues
}

// CompanyTypeStrings returns a slice of all String values of the enum
func CompanyTypeStrings() []string {
	strs := make([]string, len(_CompanyTypeNames))
	copy(strs, _CompanyTypeNames)
	return strs
}

// IsACompanyType returns "true" if the value is listed in the enum definition. "false" otherwise
func (i CompanyType) IsACompanyType() bool {
	for _, v := range _CompanyTypeValues {
		if i == v {
			return true
		}
	}
	return false
}
