// Code generated by "enumer -type=DomainEventType -transform=kebab -trimprefix=EventType"; DO NOT EDIT.

package events

import (
	"fmt"
	"strings"
)

const _DomainEventTypeName = "company-createdcompany-updatedcompany-deleted"

var _DomainEventTypeIndex = [...]uint8{0, 15, 30, 45}

const _DomainEventTypeLowerName = "company-createdcompany-updatedcompany-deleted"

func (i DomainEventType) String() string {
	if i < 0 || i >= DomainEventType(len(_DomainEventTypeIndex)-1) {
		return fmt.Sprintf("DomainEventType(%d)", i)
	}
	return _DomainEventTypeName[_DomainEventTypeIndex[i]:_DomainEventTypeIndex[i+1]]
}

// An "invalid array index" compiler error signifies that the constant values have changed.
// Re-run the stringer command to generate them again.
func _DomainEventTypeNoOp() {
	var x [1]struct{}
	_ = x[EventTypeCompanyCreated-(0)]
	_ = x[EventTypeCompanyUpdated-(1)]
	_ = x[EventTypeCompanyDeleted-(2)]
}

var _DomainEventTypeValues = []DomainEventType{EventTypeCompanyCreated, EventTypeCompanyUpdated, EventTypeCompanyDeleted}

var _DomainEventTypeNameToValueMap = map[string]DomainEventType{
	_DomainEventTypeName[0:15]:       EventTypeCompanyCreated,
	_DomainEventTypeLowerName[0:15]:  EventTypeCompanyCreated,
	_DomainEventTypeName[15:30]:      EventTypeCompanyUpdated,
	_DomainEventTypeLowerName[15:30]: EventTypeCompanyUpdated,
	_DomainEventTypeName[30:45]:      EventTypeCompanyDeleted,
	_DomainEventTypeLowerName[30:45]: EventTypeCompanyDeleted,
}

var _DomainEventTypeNames = []string{
	_DomainEventTypeName[0:15],
	_DomainEventTypeName[15:30],
	_DomainEventTypeName[30:45],
}

// DomainEventTypeString retrieves an enum value from the enum constants string name.
// Throws an error if the param is not part of the enum.
func DomainEventTypeString(s string) (DomainEventType, error) {
	if val, ok := _DomainEventTypeNameToValueMap[s]; ok {
		return val, nil
	}

	if val, ok := _DomainEventTypeNameToValueMap[strings.ToLower(s)]; ok {
		return val, nil
	}
	return 0, fmt.Errorf("%s does not belong to DomainEventType values", s)
}

// DomainEventTypeValues returns all values of the enum
func DomainEventTypeValues() []DomainEventType {
	return _DomainEventTypeValues
}

// DomainEventTypeStrings returns a slice of all String values of the enum
func DomainEventTypeStrings() []string {
	strs := make([]string, len(_DomainEventTypeNames))
	copy(strs, _DomainEventTypeNames)
	return strs
}

// IsADomainEventType returns "true" if the value is listed in the enum definition. "false" otherwise
func (i DomainEventType) IsADomainEventType() bool {
	for _, v := range _DomainEventTypeValues {
		if i == v {
			return true
		}
	}
	return false
}
